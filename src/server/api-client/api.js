"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * LanPartySeating
 * API seating service
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateEmployeeApi = exports.UpdateEmployeeApiFactory = exports.UpdateEmployeeApiFp = exports.UpdateEmployeeApiAxiosParamCreator = exports.UpdateConfigApi = exports.UpdateConfigApiFactory = exports.UpdateConfigApiFp = exports.UpdateConfigApiAxiosParamCreator = exports.ReserveSeatsApi = exports.ReserveSeatsApiFactory = exports.ReserveSeatsApiFp = exports.ReserveSeatsApiAxiosParamCreator = exports.GetSeatsApi = exports.GetSeatsApiFactory = exports.GetSeatsApiFp = exports.GetSeatsApiAxiosParamCreator = exports.GetRatingsAndAverageRatingApi = exports.GetRatingsAndAverageRatingApiFactory = exports.GetRatingsAndAverageRatingApiFp = exports.GetRatingsAndAverageRatingApiAxiosParamCreator = exports.GetLayoutConfigApi = exports.GetLayoutConfigApiFactory = exports.GetLayoutConfigApiFp = exports.GetLayoutConfigApiAxiosParamCreator = exports.GetFeedbackOnlyApi = exports.GetFeedbackOnlyApiFactory = exports.GetFeedbackOnlyApiFp = exports.GetFeedbackOnlyApiAxiosParamCreator = exports.DeleteSeatReservationsApi = exports.DeleteSeatReservationsApiFactory = exports.DeleteSeatReservationsApiFp = exports.DeleteSeatReservationsApiAxiosParamCreator = exports.DeleteReservedSeatsBelongingToAnEmployeeApi = exports.DeleteReservedSeatsBelongingToAnEmployeeApiFactory = exports.DeleteReservedSeatsBelongingToAnEmployeeApiFp = exports.DeleteReservedSeatsBelongingToAnEmployeeApiAxiosParamCreator = exports.AddFeedbackApi = exports.AddFeedbackApiFactory = exports.AddFeedbackApiFp = exports.AddFeedbackApiAxiosParamCreator = void 0;
var axios_1 = require("axios");
// Some imports not used depending on template conditions
// @ts-ignore
var common_1 = require("./common");
// @ts-ignore
var base_1 = require("./base");
/**
 * AddFeedbackApi - axios parameter creator
 * @export
 */
var AddFeedbackApiAxiosParamCreator = function (configuration) {
    var _this = this;
    return {
        /**
         *
         * @summary Add feedback
         * @param {Feedback} [feedback] Payload
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addFeedback: function (feedback, options) {
            if (options === void 0) { options = {}; }
            return __awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return __generator(this, function (_a) {
                    localVarPath = "/internal/feedback";
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    localVarHeaderParameter['Content-Type'] = 'application/json';
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(feedback, localVarRequestOptions, configuration);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
    };
};
exports.AddFeedbackApiAxiosParamCreator = AddFeedbackApiAxiosParamCreator;
/**
 * AddFeedbackApi - functional programming interface
 * @export
 */
var AddFeedbackApiFp = function (configuration) {
    var localVarAxiosParamCreator = (0, exports.AddFeedbackApiAxiosParamCreator)(configuration);
    return {
        /**
         *
         * @summary Add feedback
         * @param {Feedback} [feedback] Payload
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addFeedback: function (feedback, options) {
            return __awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.addFeedback(feedback, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
    };
};
exports.AddFeedbackApiFp = AddFeedbackApiFp;
/**
 * AddFeedbackApi - factory interface
 * @export
 */
var AddFeedbackApiFactory = function (configuration, basePath, axios) {
    var localVarFp = (0, exports.AddFeedbackApiFp)(configuration);
    return {
        /**
         *
         * @summary Add feedback
         * @param {Feedback} [feedback] Payload
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addFeedback: function (feedback, options) {
            return localVarFp.addFeedback(feedback, options).then(function (request) { return request(axios, basePath); });
        },
    };
};
exports.AddFeedbackApiFactory = AddFeedbackApiFactory;
/**
 * AddFeedbackApi - object-oriented interface
 * @export
 * @class AddFeedbackApi
 * @extends {BaseAPI}
 */
var AddFeedbackApi = /** @class */ (function (_super) {
    __extends(AddFeedbackApi, _super);
    function AddFeedbackApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     *
     * @summary Add feedback
     * @param {Feedback} [feedback] Payload
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AddFeedbackApi
     */
    AddFeedbackApi.prototype.addFeedback = function (feedback, options) {
        var _this = this;
        return (0, exports.AddFeedbackApiFp)(this.configuration).addFeedback(feedback, options).then(function (request) { return request(_this.axios, _this.basePath); });
    };
    return AddFeedbackApi;
}(base_1.BaseAPI));
exports.AddFeedbackApi = AddFeedbackApi;
/**
 * DeleteReservedSeatsBelongingToAnEmployeeApi - axios parameter creator
 * @export
 */
var DeleteReservedSeatsBelongingToAnEmployeeApiAxiosParamCreator = function (configuration) {
    var _this = this;
    return {
        /**
         *
         * @summary Delete seat reservations for a specific employee
         * @param {DeleteSeatsWithEmployeeId} [deleteSeatsWithEmployeeId] Payload
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteReservedSeatsBelongingToAnEmployee: function (deleteSeatsWithEmployeeId, options) {
            if (options === void 0) { options = {}; }
            return __awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return __generator(this, function (_a) {
                    localVarPath = "/internal/seating";
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = __assign(__assign({ method: 'DELETE' }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    localVarHeaderParameter['Content-Type'] = 'application/json';
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(deleteSeatsWithEmployeeId, localVarRequestOptions, configuration);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
    };
};
exports.DeleteReservedSeatsBelongingToAnEmployeeApiAxiosParamCreator = DeleteReservedSeatsBelongingToAnEmployeeApiAxiosParamCreator;
/**
 * DeleteReservedSeatsBelongingToAnEmployeeApi - functional programming interface
 * @export
 */
var DeleteReservedSeatsBelongingToAnEmployeeApiFp = function (configuration) {
    var localVarAxiosParamCreator = (0, exports.DeleteReservedSeatsBelongingToAnEmployeeApiAxiosParamCreator)(configuration);
    return {
        /**
         *
         * @summary Delete seat reservations for a specific employee
         * @param {DeleteSeatsWithEmployeeId} [deleteSeatsWithEmployeeId] Payload
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteReservedSeatsBelongingToAnEmployee: function (deleteSeatsWithEmployeeId, options) {
            return __awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.deleteReservedSeatsBelongingToAnEmployee(deleteSeatsWithEmployeeId, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
    };
};
exports.DeleteReservedSeatsBelongingToAnEmployeeApiFp = DeleteReservedSeatsBelongingToAnEmployeeApiFp;
/**
 * DeleteReservedSeatsBelongingToAnEmployeeApi - factory interface
 * @export
 */
var DeleteReservedSeatsBelongingToAnEmployeeApiFactory = function (configuration, basePath, axios) {
    var localVarFp = (0, exports.DeleteReservedSeatsBelongingToAnEmployeeApiFp)(configuration);
    return {
        /**
         *
         * @summary Delete seat reservations for a specific employee
         * @param {DeleteSeatsWithEmployeeId} [deleteSeatsWithEmployeeId] Payload
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteReservedSeatsBelongingToAnEmployee: function (deleteSeatsWithEmployeeId, options) {
            return localVarFp.deleteReservedSeatsBelongingToAnEmployee(deleteSeatsWithEmployeeId, options).then(function (request) { return request(axios, basePath); });
        },
    };
};
exports.DeleteReservedSeatsBelongingToAnEmployeeApiFactory = DeleteReservedSeatsBelongingToAnEmployeeApiFactory;
/**
 * DeleteReservedSeatsBelongingToAnEmployeeApi - object-oriented interface
 * @export
 * @class DeleteReservedSeatsBelongingToAnEmployeeApi
 * @extends {BaseAPI}
 */
var DeleteReservedSeatsBelongingToAnEmployeeApi = /** @class */ (function (_super) {
    __extends(DeleteReservedSeatsBelongingToAnEmployeeApi, _super);
    function DeleteReservedSeatsBelongingToAnEmployeeApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     *
     * @summary Delete seat reservations for a specific employee
     * @param {DeleteSeatsWithEmployeeId} [deleteSeatsWithEmployeeId] Payload
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DeleteReservedSeatsBelongingToAnEmployeeApi
     */
    DeleteReservedSeatsBelongingToAnEmployeeApi.prototype.deleteReservedSeatsBelongingToAnEmployee = function (deleteSeatsWithEmployeeId, options) {
        var _this = this;
        return (0, exports.DeleteReservedSeatsBelongingToAnEmployeeApiFp)(this.configuration).deleteReservedSeatsBelongingToAnEmployee(deleteSeatsWithEmployeeId, options).then(function (request) { return request(_this.axios, _this.basePath); });
    };
    return DeleteReservedSeatsBelongingToAnEmployeeApi;
}(base_1.BaseAPI));
exports.DeleteReservedSeatsBelongingToAnEmployeeApi = DeleteReservedSeatsBelongingToAnEmployeeApi;
/**
 * DeleteSeatReservationsApi - axios parameter creator
 * @export
 */
var DeleteSeatReservationsApiAxiosParamCreator = function (configuration) {
    var _this = this;
    return {
        /**
         *
         * @summary Delete seat reservations
         * @param {DeleteSeatsWithEmployeeId} [deleteSeatsWithEmployeeId] Payload
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteSeats: function (deleteSeatsWithEmployeeId, options) {
            if (options === void 0) { options = {}; }
            return __awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return __generator(this, function (_a) {
                    localVarPath = "/internal/seating/delete-with-seat-id";
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = __assign(__assign({ method: 'DELETE' }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basic required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    localVarHeaderParameter['Content-Type'] = 'application/json';
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(deleteSeatsWithEmployeeId, localVarRequestOptions, configuration);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
    };
};
exports.DeleteSeatReservationsApiAxiosParamCreator = DeleteSeatReservationsApiAxiosParamCreator;
/**
 * DeleteSeatReservationsApi - functional programming interface
 * @export
 */
var DeleteSeatReservationsApiFp = function (configuration) {
    var localVarAxiosParamCreator = (0, exports.DeleteSeatReservationsApiAxiosParamCreator)(configuration);
    return {
        /**
         *
         * @summary Delete seat reservations
         * @param {DeleteSeatsWithEmployeeId} [deleteSeatsWithEmployeeId] Payload
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteSeats: function (deleteSeatsWithEmployeeId, options) {
            return __awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.deleteSeats(deleteSeatsWithEmployeeId, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
    };
};
exports.DeleteSeatReservationsApiFp = DeleteSeatReservationsApiFp;
/**
 * DeleteSeatReservationsApi - factory interface
 * @export
 */
var DeleteSeatReservationsApiFactory = function (configuration, basePath, axios) {
    var localVarFp = (0, exports.DeleteSeatReservationsApiFp)(configuration);
    return {
        /**
         *
         * @summary Delete seat reservations
         * @param {DeleteSeatsWithEmployeeId} [deleteSeatsWithEmployeeId] Payload
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteSeats: function (deleteSeatsWithEmployeeId, options) {
            return localVarFp.deleteSeats(deleteSeatsWithEmployeeId, options).then(function (request) { return request(axios, basePath); });
        },
    };
};
exports.DeleteSeatReservationsApiFactory = DeleteSeatReservationsApiFactory;
/**
 * DeleteSeatReservationsApi - object-oriented interface
 * @export
 * @class DeleteSeatReservationsApi
 * @extends {BaseAPI}
 */
var DeleteSeatReservationsApi = /** @class */ (function (_super) {
    __extends(DeleteSeatReservationsApi, _super);
    function DeleteSeatReservationsApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     *
     * @summary Delete seat reservations
     * @param {DeleteSeatsWithEmployeeId} [deleteSeatsWithEmployeeId] Payload
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DeleteSeatReservationsApi
     */
    DeleteSeatReservationsApi.prototype.deleteSeats = function (deleteSeatsWithEmployeeId, options) {
        var _this = this;
        return (0, exports.DeleteSeatReservationsApiFp)(this.configuration).deleteSeats(deleteSeatsWithEmployeeId, options).then(function (request) { return request(_this.axios, _this.basePath); });
    };
    return DeleteSeatReservationsApi;
}(base_1.BaseAPI));
exports.DeleteSeatReservationsApi = DeleteSeatReservationsApi;
/**
 * GetFeedbackOnlyApi - axios parameter creator
 * @export
 */
var GetFeedbackOnlyApiAxiosParamCreator = function (configuration) {
    var _this = this;
    return {
        /**
         *
         * @summary Retrieve feedback based on provided list
         * @param {GetFeedbackOnlyRequest} [getFeedbackOnlyRequest] Payload
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFeedbackOnly: function (getFeedbackOnlyRequest, options) {
            if (options === void 0) { options = {}; }
            return __awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return __generator(this, function (_a) {
                    localVarPath = "/internal/feedback/retrieve";
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basic required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    localVarHeaderParameter['Content-Type'] = 'application/json';
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(getFeedbackOnlyRequest, localVarRequestOptions, configuration);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
    };
};
exports.GetFeedbackOnlyApiAxiosParamCreator = GetFeedbackOnlyApiAxiosParamCreator;
/**
 * GetFeedbackOnlyApi - functional programming interface
 * @export
 */
var GetFeedbackOnlyApiFp = function (configuration) {
    var localVarAxiosParamCreator = (0, exports.GetFeedbackOnlyApiAxiosParamCreator)(configuration);
    return {
        /**
         *
         * @summary Retrieve feedback based on provided list
         * @param {GetFeedbackOnlyRequest} [getFeedbackOnlyRequest] Payload
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFeedbackOnly: function (getFeedbackOnlyRequest, options) {
            return __awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.getFeedbackOnly(getFeedbackOnlyRequest, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
    };
};
exports.GetFeedbackOnlyApiFp = GetFeedbackOnlyApiFp;
/**
 * GetFeedbackOnlyApi - factory interface
 * @export
 */
var GetFeedbackOnlyApiFactory = function (configuration, basePath, axios) {
    var localVarFp = (0, exports.GetFeedbackOnlyApiFp)(configuration);
    return {
        /**
         *
         * @summary Retrieve feedback based on provided list
         * @param {GetFeedbackOnlyRequest} [getFeedbackOnlyRequest] Payload
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFeedbackOnly: function (getFeedbackOnlyRequest, options) {
            return localVarFp.getFeedbackOnly(getFeedbackOnlyRequest, options).then(function (request) { return request(axios, basePath); });
        },
    };
};
exports.GetFeedbackOnlyApiFactory = GetFeedbackOnlyApiFactory;
/**
 * GetFeedbackOnlyApi - object-oriented interface
 * @export
 * @class GetFeedbackOnlyApi
 * @extends {BaseAPI}
 */
var GetFeedbackOnlyApi = /** @class */ (function (_super) {
    __extends(GetFeedbackOnlyApi, _super);
    function GetFeedbackOnlyApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     *
     * @summary Retrieve feedback based on provided list
     * @param {GetFeedbackOnlyRequest} [getFeedbackOnlyRequest] Payload
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GetFeedbackOnlyApi
     */
    GetFeedbackOnlyApi.prototype.getFeedbackOnly = function (getFeedbackOnlyRequest, options) {
        var _this = this;
        return (0, exports.GetFeedbackOnlyApiFp)(this.configuration).getFeedbackOnly(getFeedbackOnlyRequest, options).then(function (request) { return request(_this.axios, _this.basePath); });
    };
    return GetFeedbackOnlyApi;
}(base_1.BaseAPI));
exports.GetFeedbackOnlyApi = GetFeedbackOnlyApi;
/**
 * GetLayoutConfigApi - axios parameter creator
 * @export
 */
var GetLayoutConfigApiAxiosParamCreator = function (configuration) {
    var _this = this;
    return {
        /**
         *
         * @summary Get layout config
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getLayoutConfig: function (options) {
            if (options === void 0) { options = {}; }
            return __awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return __generator(this, function (_a) {
                    localVarPath = "/internal/config";
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
    };
};
exports.GetLayoutConfigApiAxiosParamCreator = GetLayoutConfigApiAxiosParamCreator;
/**
 * GetLayoutConfigApi - functional programming interface
 * @export
 */
var GetLayoutConfigApiFp = function (configuration) {
    var localVarAxiosParamCreator = (0, exports.GetLayoutConfigApiAxiosParamCreator)(configuration);
    return {
        /**
         *
         * @summary Get layout config
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getLayoutConfig: function (options) {
            return __awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.getLayoutConfig(options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
    };
};
exports.GetLayoutConfigApiFp = GetLayoutConfigApiFp;
/**
 * GetLayoutConfigApi - factory interface
 * @export
 */
var GetLayoutConfigApiFactory = function (configuration, basePath, axios) {
    var localVarFp = (0, exports.GetLayoutConfigApiFp)(configuration);
    return {
        /**
         *
         * @summary Get layout config
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getLayoutConfig: function (options) {
            return localVarFp.getLayoutConfig(options).then(function (request) { return request(axios, basePath); });
        },
    };
};
exports.GetLayoutConfigApiFactory = GetLayoutConfigApiFactory;
/**
 * GetLayoutConfigApi - object-oriented interface
 * @export
 * @class GetLayoutConfigApi
 * @extends {BaseAPI}
 */
var GetLayoutConfigApi = /** @class */ (function (_super) {
    __extends(GetLayoutConfigApi, _super);
    function GetLayoutConfigApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     *
     * @summary Get layout config
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GetLayoutConfigApi
     */
    GetLayoutConfigApi.prototype.getLayoutConfig = function (options) {
        var _this = this;
        return (0, exports.GetLayoutConfigApiFp)(this.configuration).getLayoutConfig(options).then(function (request) { return request(_this.axios, _this.basePath); });
    };
    return GetLayoutConfigApi;
}(base_1.BaseAPI));
exports.GetLayoutConfigApi = GetLayoutConfigApi;
/**
 * GetRatingsAndAverageRatingApi - axios parameter creator
 * @export
 */
var GetRatingsAndAverageRatingApiAxiosParamCreator = function (configuration) {
    var _this = this;
    return {
        /**
         *
         * @summary Get all ratings and average rating
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRatingsAndAverageRating: function (options) {
            if (options === void 0) { options = {}; }
            return __awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return __generator(this, function (_a) {
                    localVarPath = "/internal/feedback/ratings";
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basic required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
    };
};
exports.GetRatingsAndAverageRatingApiAxiosParamCreator = GetRatingsAndAverageRatingApiAxiosParamCreator;
/**
 * GetRatingsAndAverageRatingApi - functional programming interface
 * @export
 */
var GetRatingsAndAverageRatingApiFp = function (configuration) {
    var localVarAxiosParamCreator = (0, exports.GetRatingsAndAverageRatingApiAxiosParamCreator)(configuration);
    return {
        /**
         *
         * @summary Get all ratings and average rating
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRatingsAndAverageRating: function (options) {
            return __awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.getRatingsAndAverageRating(options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
    };
};
exports.GetRatingsAndAverageRatingApiFp = GetRatingsAndAverageRatingApiFp;
/**
 * GetRatingsAndAverageRatingApi - factory interface
 * @export
 */
var GetRatingsAndAverageRatingApiFactory = function (configuration, basePath, axios) {
    var localVarFp = (0, exports.GetRatingsAndAverageRatingApiFp)(configuration);
    return {
        /**
         *
         * @summary Get all ratings and average rating
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRatingsAndAverageRating: function (options) {
            return localVarFp.getRatingsAndAverageRating(options).then(function (request) { return request(axios, basePath); });
        },
    };
};
exports.GetRatingsAndAverageRatingApiFactory = GetRatingsAndAverageRatingApiFactory;
/**
 * GetRatingsAndAverageRatingApi - object-oriented interface
 * @export
 * @class GetRatingsAndAverageRatingApi
 * @extends {BaseAPI}
 */
var GetRatingsAndAverageRatingApi = /** @class */ (function (_super) {
    __extends(GetRatingsAndAverageRatingApi, _super);
    function GetRatingsAndAverageRatingApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     *
     * @summary Get all ratings and average rating
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GetRatingsAndAverageRatingApi
     */
    GetRatingsAndAverageRatingApi.prototype.getRatingsAndAverageRating = function (options) {
        var _this = this;
        return (0, exports.GetRatingsAndAverageRatingApiFp)(this.configuration).getRatingsAndAverageRating(options).then(function (request) { return request(_this.axios, _this.basePath); });
    };
    return GetRatingsAndAverageRatingApi;
}(base_1.BaseAPI));
exports.GetRatingsAndAverageRatingApi = GetRatingsAndAverageRatingApi;
/**
 * GetSeatsApi - axios parameter creator
 * @export
 */
var GetSeatsApiAxiosParamCreator = function (configuration) {
    var _this = this;
    return {
        /**
         *
         * @summary Get all current reserved seats
         * @param {string} [dates] Search with dates e.g. 2023-09-29,2023-09-30
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getReservesSeats: function (dates, options) {
            if (options === void 0) { options = {}; }
            return __awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return __generator(this, function (_a) {
                    localVarPath = "/internal/seating";
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    if (dates !== undefined) {
                        localVarQueryParameter['dates'] = dates;
                    }
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
    };
};
exports.GetSeatsApiAxiosParamCreator = GetSeatsApiAxiosParamCreator;
/**
 * GetSeatsApi - functional programming interface
 * @export
 */
var GetSeatsApiFp = function (configuration) {
    var localVarAxiosParamCreator = (0, exports.GetSeatsApiAxiosParamCreator)(configuration);
    return {
        /**
         *
         * @summary Get all current reserved seats
         * @param {string} [dates] Search with dates e.g. 2023-09-29,2023-09-30
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getReservesSeats: function (dates, options) {
            return __awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.getReservesSeats(dates, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
    };
};
exports.GetSeatsApiFp = GetSeatsApiFp;
/**
 * GetSeatsApi - factory interface
 * @export
 */
var GetSeatsApiFactory = function (configuration, basePath, axios) {
    var localVarFp = (0, exports.GetSeatsApiFp)(configuration);
    return {
        /**
         *
         * @summary Get all current reserved seats
         * @param {string} [dates] Search with dates e.g. 2023-09-29,2023-09-30
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getReservesSeats: function (dates, options) {
            return localVarFp.getReservesSeats(dates, options).then(function (request) { return request(axios, basePath); });
        },
    };
};
exports.GetSeatsApiFactory = GetSeatsApiFactory;
/**
 * GetSeatsApi - object-oriented interface
 * @export
 * @class GetSeatsApi
 * @extends {BaseAPI}
 */
var GetSeatsApi = /** @class */ (function (_super) {
    __extends(GetSeatsApi, _super);
    function GetSeatsApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     *
     * @summary Get all current reserved seats
     * @param {string} [dates] Search with dates e.g. 2023-09-29,2023-09-30
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GetSeatsApi
     */
    GetSeatsApi.prototype.getReservesSeats = function (dates, options) {
        var _this = this;
        return (0, exports.GetSeatsApiFp)(this.configuration).getReservesSeats(dates, options).then(function (request) { return request(_this.axios, _this.basePath); });
    };
    return GetSeatsApi;
}(base_1.BaseAPI));
exports.GetSeatsApi = GetSeatsApi;
/**
 * ReserveSeatsApi - axios parameter creator
 * @export
 */
var ReserveSeatsApiAxiosParamCreator = function (configuration) {
    var _this = this;
    return {
        /**
         *
         * @summary Reserve seats
         * @param {ReserveSeats} [reserveSeats] Payload
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        reserveSeats: function (reserveSeats, options) {
            if (options === void 0) { options = {}; }
            return __awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return __generator(this, function (_a) {
                    localVarPath = "/internal/seating";
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    localVarHeaderParameter['Content-Type'] = 'application/json';
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(reserveSeats, localVarRequestOptions, configuration);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
    };
};
exports.ReserveSeatsApiAxiosParamCreator = ReserveSeatsApiAxiosParamCreator;
/**
 * ReserveSeatsApi - functional programming interface
 * @export
 */
var ReserveSeatsApiFp = function (configuration) {
    var localVarAxiosParamCreator = (0, exports.ReserveSeatsApiAxiosParamCreator)(configuration);
    return {
        /**
         *
         * @summary Reserve seats
         * @param {ReserveSeats} [reserveSeats] Payload
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        reserveSeats: function (reserveSeats, options) {
            return __awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.reserveSeats(reserveSeats, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
    };
};
exports.ReserveSeatsApiFp = ReserveSeatsApiFp;
/**
 * ReserveSeatsApi - factory interface
 * @export
 */
var ReserveSeatsApiFactory = function (configuration, basePath, axios) {
    var localVarFp = (0, exports.ReserveSeatsApiFp)(configuration);
    return {
        /**
         *
         * @summary Reserve seats
         * @param {ReserveSeats} [reserveSeats] Payload
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        reserveSeats: function (reserveSeats, options) {
            return localVarFp.reserveSeats(reserveSeats, options).then(function (request) { return request(axios, basePath); });
        },
    };
};
exports.ReserveSeatsApiFactory = ReserveSeatsApiFactory;
/**
 * ReserveSeatsApi - object-oriented interface
 * @export
 * @class ReserveSeatsApi
 * @extends {BaseAPI}
 */
var ReserveSeatsApi = /** @class */ (function (_super) {
    __extends(ReserveSeatsApi, _super);
    function ReserveSeatsApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     *
     * @summary Reserve seats
     * @param {ReserveSeats} [reserveSeats] Payload
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ReserveSeatsApi
     */
    ReserveSeatsApi.prototype.reserveSeats = function (reserveSeats, options) {
        var _this = this;
        return (0, exports.ReserveSeatsApiFp)(this.configuration).reserveSeats(reserveSeats, options).then(function (request) { return request(_this.axios, _this.basePath); });
    };
    return ReserveSeatsApi;
}(base_1.BaseAPI));
exports.ReserveSeatsApi = ReserveSeatsApi;
/**
 * UpdateConfigApi - axios parameter creator
 * @export
 */
var UpdateConfigApiAxiosParamCreator = function (configuration) {
    var _this = this;
    return {
        /**
         *
         * @summary Set layout config
         * @param {Config} [config] Payload
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateConfig: function (config, options) {
            if (options === void 0) { options = {}; }
            return __awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return __generator(this, function (_a) {
                    localVarPath = "/internal/config";
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    // authentication basic required
                    // http basic authentication required
                    (0, common_1.setBasicAuthToObject)(localVarRequestOptions, configuration);
                    localVarHeaderParameter['Content-Type'] = 'application/json';
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(config, localVarRequestOptions, configuration);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
    };
};
exports.UpdateConfigApiAxiosParamCreator = UpdateConfigApiAxiosParamCreator;
/**
 * UpdateConfigApi - functional programming interface
 * @export
 */
var UpdateConfigApiFp = function (configuration) {
    var localVarAxiosParamCreator = (0, exports.UpdateConfigApiAxiosParamCreator)(configuration);
    return {
        /**
         *
         * @summary Set layout config
         * @param {Config} [config] Payload
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateConfig: function (config, options) {
            return __awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.updateConfig(config, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
    };
};
exports.UpdateConfigApiFp = UpdateConfigApiFp;
/**
 * UpdateConfigApi - factory interface
 * @export
 */
var UpdateConfigApiFactory = function (configuration, basePath, axios) {
    var localVarFp = (0, exports.UpdateConfigApiFp)(configuration);
    return {
        /**
         *
         * @summary Set layout config
         * @param {Config} [config] Payload
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateConfig: function (config, options) {
            return localVarFp.updateConfig(config, options).then(function (request) { return request(axios, basePath); });
        },
    };
};
exports.UpdateConfigApiFactory = UpdateConfigApiFactory;
/**
 * UpdateConfigApi - object-oriented interface
 * @export
 * @class UpdateConfigApi
 * @extends {BaseAPI}
 */
var UpdateConfigApi = /** @class */ (function (_super) {
    __extends(UpdateConfigApi, _super);
    function UpdateConfigApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     *
     * @summary Set layout config
     * @param {Config} [config] Payload
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UpdateConfigApi
     */
    UpdateConfigApi.prototype.updateConfig = function (config, options) {
        var _this = this;
        return (0, exports.UpdateConfigApiFp)(this.configuration).updateConfig(config, options).then(function (request) { return request(_this.axios, _this.basePath); });
    };
    return UpdateConfigApi;
}(base_1.BaseAPI));
exports.UpdateConfigApi = UpdateConfigApi;
/**
 * UpdateEmployeeApi - axios parameter creator
 * @export
 */
var UpdateEmployeeApiAxiosParamCreator = function (configuration) {
    var _this = this;
    return {
        /**
         *
         * @summary Update employee
         * @param {UpdateEmployee} [updateEmployee] Payload
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateEmployee: function (updateEmployee, options) {
            if (options === void 0) { options = {}; }
            return __awaiter(_this, void 0, void 0, function () {
                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;
                return __generator(this, function (_a) {
                    localVarPath = "/internal/employee";
                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
                    if (configuration) {
                        baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = __assign(__assign({ method: 'PUT' }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    localVarHeaderParameter['Content-Type'] = 'application/json';
                    (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(updateEmployee, localVarRequestOptions, configuration);
                    return [2 /*return*/, {
                            url: (0, common_1.toPathString)(localVarUrlObj),
                            options: localVarRequestOptions,
                        }];
                });
            });
        },
    };
};
exports.UpdateEmployeeApiAxiosParamCreator = UpdateEmployeeApiAxiosParamCreator;
/**
 * UpdateEmployeeApi - functional programming interface
 * @export
 */
var UpdateEmployeeApiFp = function (configuration) {
    var localVarAxiosParamCreator = (0, exports.UpdateEmployeeApiAxiosParamCreator)(configuration);
    return {
        /**
         *
         * @summary Update employee
         * @param {UpdateEmployee} [updateEmployee] Payload
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateEmployee: function (updateEmployee, options) {
            return __awaiter(this, void 0, void 0, function () {
                var localVarAxiosArgs;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.updateEmployee(updateEmployee, options)];
                        case 1:
                            localVarAxiosArgs = _a.sent();
                            return [2 /*return*/, (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];
                    }
                });
            });
        },
    };
};
exports.UpdateEmployeeApiFp = UpdateEmployeeApiFp;
/**
 * UpdateEmployeeApi - factory interface
 * @export
 */
var UpdateEmployeeApiFactory = function (configuration, basePath, axios) {
    var localVarFp = (0, exports.UpdateEmployeeApiFp)(configuration);
    return {
        /**
         *
         * @summary Update employee
         * @param {UpdateEmployee} [updateEmployee] Payload
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateEmployee: function (updateEmployee, options) {
            return localVarFp.updateEmployee(updateEmployee, options).then(function (request) { return request(axios, basePath); });
        },
    };
};
exports.UpdateEmployeeApiFactory = UpdateEmployeeApiFactory;
/**
 * UpdateEmployeeApi - object-oriented interface
 * @export
 * @class UpdateEmployeeApi
 * @extends {BaseAPI}
 */
var UpdateEmployeeApi = /** @class */ (function (_super) {
    __extends(UpdateEmployeeApi, _super);
    function UpdateEmployeeApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     *
     * @summary Update employee
     * @param {UpdateEmployee} [updateEmployee] Payload
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UpdateEmployeeApi
     */
    UpdateEmployeeApi.prototype.updateEmployee = function (updateEmployee, options) {
        var _this = this;
        return (0, exports.UpdateEmployeeApiFp)(this.configuration).updateEmployee(updateEmployee, options).then(function (request) { return request(_this.axios, _this.basePath); });
    };
    return UpdateEmployeeApi;
}(base_1.BaseAPI));
exports.UpdateEmployeeApi = UpdateEmployeeApi;
